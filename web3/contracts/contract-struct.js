// /**
//  * Created by lebamui on 11/01/2019.
//  */
// const contract = {
//     currentProvider: [Getter/Setter],
//     _requestManager:
//     RequestManager {
//     provider:
//         WebsocketProvider {
//         responseCallbacks: [Object],
//             notificationCallbacks: [Array],
//             _customTimeout: undefined,
//             connection: [Object],
//             connected: [Getter],
//             lastChunk: null },
//     providers:
//     { WebsocketProvider: [Function: WebsocketProvider],
//         HttpProvider: [Function: HttpProvider],
//         IpcProvider: [Function: IpcProvider] },
//     subscriptions: {} },
// givenProvider: null,
//     providers:
// { WebsocketProvider: [Function: WebsocketProvider],
//     HttpProvider: [Function: HttpProvider],
//     IpcProvider: [Function: IpcProvider] },
// _provider:
//     WebsocketProvider {
//     responseCallbacks: { '7': [Object] },
//     notificationCallbacks:
//         [ [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification],
//     [Function: requestManagerNotification] ],
//     _customTimeout: undefined,
//         connection:
//     W3CWebSocket {
//         _listeners: {},
//         addEventListener: [Function: _addEventListener],
//         removeEventListener: [Function: _removeEventListener],
//         dispatchEvent: [Function: _dispatchEvent],
//         _url: 'ws://localhost:8545',
//             _readyState: 1,
//             _protocol: undefined,
//             _extensions: [],
//             _bufferedAmount: 0,
//             _binaryType: 'arraybuffer',
//             _connection: [Object],
//             _client: [Object],
//             onerror: [Function],
//             onclose: [Function],
//             onmessage: [Function] },
//     connected: [Getter],
//         lastChunk: null },
// setProvider: [Function],
//     BatchRequest: [Function: bound Batch],
// extend:
// { [Function: ex]
//     formatters:
//     { inputDefaultBlockNumberFormatter: [Function: inputDefaultBlockNumberFormatter],
//         inputBlockNumberFormatter: [Function: inputBlockNumberFormatter],
//         inputCallFormatter: [Function: inputCallFormatter],
//         inputTransactionFormatter: [Function: inputTransactionFormatter],
//         inputAddressFormatter: [Function: inputAddressFormatter],
//         inputPostFormatter: [Function: inputPostFormatter],
//         inputLogFormatter: [Function: inputLogFormatter],
//         inputSignFormatter: [Function: inputSignFormatter],
//         outputBigNumberFormatter: [Function: outputBigNumberFormatter],
//         outputTransactionFormatter: [Function: outputTransactionFormatter],
//         outputTransactionReceiptFormatter: [Function: outputTransactionReceiptFormatter],
//         outputBlockFormatter: [Function: outputBlockFormatter],
//         outputLogFormatter: [Function: outputLogFormatter],
//         outputPostFormatter: [Function: outputPostFormatter],
//         outputSyncingFormatter: [Function: outputSyncingFormatter] },
//     utils:
//     { _fireError: [Function: _fireError],
//         _jsonInterfaceMethodToString: [Function: _jsonInterfaceMethodToString],
//         _flattenTypes: [Function: _flattenTypes],
//         randomHex: [Function: randomHex],
//         _: [Object],
//             BN: [Object],
//         isBN: [Function: isBN],
//         isBigNumber: [Function: isBigNumber],
//         isHex: [Function: isHex],
//         isHexStrict: [Function: isHexStrict],
//         sha3: [Object],
//             keccak256: [Object],
//         soliditySha3: [Function: soliditySha3],
//         isAddress: [Function: isAddress],
//         checkAddressChecksum: [Function: checkAddressChecksum],
//         toChecksumAddress: [Function: toChecksumAddress],
//         toHex: [Function: toHex],
//         toBN: [Function: toBN],
//         bytesToHex: [Function: bytesToHex],
//         hexToBytes: [Function: hexToBytes],
//         hexToNumberString: [Function: hexToNumberString],
//         hexToNumber: [Function: hexToNumber],
//         toDecimal: [Function: hexToNumber],
//         numberToHex: [Function: numberToHex],
//         fromDecimal: [Function: numberToHex],
//         hexToUtf8: [Function: hexToUtf8],
//         hexToString: [Function: hexToUtf8],
//         toUtf8: [Function: hexToUtf8],
//         utf8ToHex: [Function: utf8ToHex],
//         stringToHex: [Function: utf8ToHex],
//         fromUtf8: [Function: utf8ToHex],
//         hexToAscii: [Function: hexToAscii],
//         toAscii: [Function: hexToAscii],
//         asciiToHex: [Function: asciiToHex],
//         fromAscii: [Function: asciiToHex],
//         unitMap: [Object],
//             toWei: [Function: toWei],
//         fromWei: [Function: fromWei],
//         padLeft: [Function: leftPad],
//         leftPad: [Function: leftPad],
//         padRight: [Function: rightPad],
//         rightPad: [Function: rightPad],
//         toTwosComplement: [Function: toTwosComplement] },
//     Method: [Function: Method] },
// clearSubscriptions: [Function],
//     options:
// { address: [Getter/Setter],
//     jsonInterface: [Getter/Setter],
//     data: undefined,
//     from: undefined,
//     gasPrice: undefined,
//     gas: undefined },
// defaultAccount: [Getter/Setter],
//     defaultBlock: [Getter/Setter],
//     methods:
// { getHash: [Function: bound _createTxObject],
//     '0xd13319c4': [Function: bound _createTxObject],
//     'getHash()': [Function: bound _createTxObject] },
// events: { allEvents: [Function: bound ] },
// _address: '0x70277bB3e8F63c42816f338201ddD9B6EB8Cc6Ea',
//     _jsonInterface:
// [ { constant: true,
//     inputs: [],
//     name: 'getHash',
//     outputs: [Array],
//     payable: false,
//     stateMutability: 'view',
//     type: 'function',
//     signature: '0xd13319c4' },
//     { inputs: [Array],
//         payable: false,
//         stateMutability: 'nonpayable',
//         type: 'constructor',
//         constant: undefined,
//         signature: 'constructor' } ] }